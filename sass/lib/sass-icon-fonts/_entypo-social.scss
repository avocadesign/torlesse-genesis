// Sass integration for Entypo Social v2.0
//   https://github.com/rstacruz/sass_icon_fonts
//
// Website: http://www.entypo.com/
//
// Font files:
//   http://www.entypo.com/css/entypo-social.eot
//   http://www.entypo.com/css/entypo-social.svg
//   http://www.entypo.com/css/entypo-social.woff
//   http://www.entypo.com/css/entypo-social.ttf

$es-path: "entypo-social" !default;
$fa-path: 'fontawesome-webfont' !default;

@mixin es-font {
  @font-face {
    font-family: "entypo-social";
    src: url("#{$es-path}.eot");
    src: url("#{$es-path}.eot?#iefix") format("embedded-opentype"), url("#{$es-path}.woff") format("woff"), url("#{$es-path}.ttf") format("truetype"), url("#{$es-path}.svg#entypo-social") format("svg");
    font-weight: normal;
    font-style: normal;
    speak: none;
  }
}

@mixin fa-font {
  @font-face {
    font-family: "FontAwesome";
    src: url("#{$fa-path}.eot");
    src: url("#{$fa-path}.eot?#iefix") format("embedded-opentype"), url("#{$fa-path}.woff") format("woff"), url("#{$fa-path}.ttf") format("truetype"), url("#{$es-path}.svg#FontAwesome") format("svg");
    font-weight: normal;
    font-style: normal;
    speak: none;
  }
}

// List of unicode characters for entypo social icons
$social-icons: (
	'github' 				'\F300',
	'c-github' 				'\F301',
	'flickr' 				'\F303',
	'c-flickr' 				'\F304',
	'vimeo' 				'\F306',
	'c-vimeo' 				'\F307',
	'twitter' 				'\EA75',
	'c-twitter' 			'\F30A',
	'facebook' 				'\F30C',
	'c-facebook' 			'\F30D',
	's-facebook' 			'\F30E',
	'google-plus' 			'\F30F',
	'c-google-plus' 		'\F310',
	'pinterest' 			'\F312',
	'c-pinterest' 			'\F313',
	'tumblr' 				'\F315',
	'c-tumblr' 				'\F316',
	'linkedin' 				'\F318',
	'c-linkedin' 			'\F319',
	'dribbble' 				'\F31B',
	'c-dribbble' 			'\F31C',
	'stumbleupon' 			'\F31E',
	'c-stumbleupon' 		'\F31F',
	'lastfm' 				'\F321',
	'c-lastfm' 				'\F322',
	'rdio' 					'\F324',
	'c-rdio' 				'\F325',
    'spotify' 				'\F327',
    'c-spotify' 			'\F328',
    'qq' 					'\F32A',
	'instagram' 			'\F32D',
	'dropbox' 				'\F330',
	'evernote' 				'\F333',
	'flattr' 				'\F336',
	'skype' 				'\F339',
	'c-skype' 				'\F33A',
	'renren' 				'\F33C',
	'sina-weibo' 			'\F33F',
	'paypal' 				'\F342',
	'picasa' 				'\F345',
	'soundcloud' 			'\F348',
	'mixi' 					'\F34B',
	'behance' 				'\F34E',
	'google-circles' 		'\F351',
	'vk' 					'\F354',
    'smashing' 				'\F357'
);

// List of unicode characters for entypo social icons
$fontawesome-icons: (
	'facebook-sign'					'\F082',
	'youtube'						'\F167',
	'youtube-sign'					'\F166'
);

// Function to match name to unicode character
@function match($haystack, $needle) {
    @each $item in $haystack {
        $index: index($item, $needle);
        @if $index { 
            $return: if($index == 1, 2, $index);
            @return nth($item, $return); 
        }
    }
    @return false;
}

/*
* 	Main Icon mixin
*
* 	Based on http://jaydenseric.com/blog/fun-with-sass-and-font-icons 
*
*	e.g. 
*	@include icon('phone', 'before', true, $large, $top:-3px, $margin:5px);
* 	@include icon('phone', 'before', true, $large, $top:-3px, $margin:5px) {
*		color: black;
* 	}
*/
@mixin social-icon($social-icon: false, $position: 'before', $styles: true, $size: auto, $margin: auto, $color: auto, $top: auto, $shadow: none) {
    // Either a :before or :after pseudo-element, defaulting to :before
    &:#{$position} {
    	
    	
        @if $social-icon {
             // Icon has been specified
            content: match($social-icons, $social-icon);
        }
        
		@if $styles {
			// Supportive icon styles have been specified
			position: relative;
			display: inline-block;
			width: auto;
			text-decoration: none;
			//vertical-align: middle;
			text-rendering: optimizeLegibility !important;
			-webkit-font-smoothing: antialiased !important;
			-moz-osx-font-smoothing: grayscale;
			speak: none;
            text-transform: none;
            
            line-height: normal;
            font: {
                style: normal;
                variant: normal;
                weight: normal;
                family: "entypo-social";
                size: $large;
                
                @if $size != auto {
					size: $size;
				}

            }
            
            @if $margin != auto {
            	@if $position == 'before' {
	            	margin-right: $margin;
            	} @else if $position == 'after'{
	            	margin-left: $margin;
            	}
			   
		    }
            
            @if $top != auto {
		      position: relative;
		      top: $top;
		    }
		    
		    @if $color != auto {
		      color: $color;
		    }
		    
		    @if $shadow != none {
		      text-shadow: $shadow;
		    }
            
            
        }
        // Include any extra rules supplied for the pseudo-element
        @content;
     
    }
}

/*
* 	Main Icon mixin
*
* 	Based on http://jaydenseric.com/blog/fun-with-sass-and-font-icons 
*
*	e.g. 
*	@include icon('phone', 'before', true, $large, $top:-3px, $margin:5px);
* 	@include icon('phone', 'before', true, $large, $top:-3px, $margin:5px) {
*		color: black;
* 	}
*/
@mixin fontawesome-icon($fontawesome-icon: false, $position: 'before', $styles: true, $size: auto, $margin: auto, $color: auto, $top: auto, $shadow: none) {
    // Either a :before or :after pseudo-element, defaulting to :before
    &:#{$position} {
    	
    	
        @if $fontawesome-icon {
             // Icon has been specified
            content: match($fontawesome-icons, $fontawesome-icon);
        }
        
		@if $styles {
			// Supportive icon styles have been specified
			position: relative;
			display: inline-block;
			width: auto;
			text-decoration: none;
			//vertical-align: middle;
			text-rendering: optimizeLegibility !important;
			-webkit-font-smoothing: antialiased !important;
			-moz-osx-font-smoothing: grayscale;
			speak: none;
            text-transform: none;
            
            line-height: normal;
            font: {
                style: normal;
                variant: normal;
                weight: normal;
                family: "FontAwesome";
                
                @if $size != auto {
					size: $size;
				}

            }
            
            @if $margin != auto {
            	@if $position == 'before' {
	            	margin-right: $margin;
            	} @else if $position == 'after'{
	            	margin-left: $margin;
            	}
			   
		    }
            
            @if $top != auto {
		      position: relative;
		      top: $top;
		    }
		    
		    @if $color != auto {
		      color: $color;
		    }
		    
		    @if $shadow != none {
		      text-shadow: $shadow;
		    }
            
            
        }
        // Include any extra rules supplied for the pseudo-element
        @content;
     
    }
}